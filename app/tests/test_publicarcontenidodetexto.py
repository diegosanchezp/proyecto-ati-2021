import unittest
from .base_test import BaseSeleniumUnitTest
from app.models.mural import Publicacion

# Generated by Selenium IDE
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities

class TestPublicarcontenidocontexto(BaseSeleniumUnitTest):
  
  def test_publicarcontenidodetexto(self):
    # Test name: publicarcontenidocontexto
    # Step # | name | target | value | comment
    # 1 | open | http://localhost:5000/ |  | 
    self.login_user()
    
    # Verificar usuario este logueado
    self.assertEqual(self.driver.current_url, "http://localhost:5000/mural/1")

    
    # 8 | click | linkText=See my profile |  | 

    self.driver.find_element(By.ID, "sidebar-ver-mi-perfil").click()
    # 9 | click | linkText=Crear Publicacion |  | 
    self.driver.find_element(By.ID, "ver-perfil-crear-publicacion").click()

    # 10 | click | id=contenido |  | 

    # verificar usuario esta en vista de crear publicacion
    self.assertEqual(self.driver.current_url, "http://localhost:5000/mural/crear-publicacion")

    self.driver.find_element(By.ID, "contenido").click()
    # 11 | type | id=contenido | Publicacion automatizada | 
    self.driver.find_element(By.ID, "contenido").send_keys("Publicacion automatizada")
    # 12 | click | id=tipo_publicacion |  | 
    self.driver.find_element(By.ID, "tipo_publicacion").click()
    # 13 | click | id=publicar |  | 
    self.driver.find_element(By.ID, "publicar").click()
    # 14 | click | css=.container:nth-child(3) > .row > p |  |
    
    # Despues de haber publicado debe de haberse redirijido hacia el mural
    self.assertEqual(self.driver.current_url, "http://localhost:5000/mural/1")

    text_last = self.driver.find_element(By.CSS_SELECTOR, ".container:nth-child(3) > .row > p").text

    self.assertEqual(text_last, "Publicacion automatizada")

if __name__ == '__main__':
    unittest.main()
#python3 -m unittest app/tests/test_publicarcontenidodetexto.py
